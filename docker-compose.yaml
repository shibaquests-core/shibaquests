version: '3.8'
services:
  db:
    container_name: ${APP_NAME}-db
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRESQL_FSYNC: "off"
      PGDATA: /data/postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./db-data:/data/postgres
    restart: unless-stopped
  api:
    container_name: ${APP_NAME}-api
    image: ${APP_NAME}-api
    build:
      context: ./api
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${APP_NAME}-db:5432/${POSTGRES_DB}?schema=public
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./tmp:/usr/src/app/tmp
  webapp:
    container_name: ${APP_NAME}-webapp
    image: ${APP_NAME}-webapp
    build:
      context: ./webapp
      args:
        - VITE_API_BASE_URL=${VITE_API_BASE_URL}
        - VITE_PINATA_TOKEN=${VITE_PINATA_TOKEN}
        - VITE_PINATA_GATEWAY=${VITE_PINATA_GATEWAY}
        - VITE_WEB3_MODAL_PROJECT_ID=${VITE_WEB3_MODAL_PROJECT_ID}
        - VITE_EXPLORER_URL=${VITE_EXPLORER_URL}
        - VITE_FACTORY_ADDRESS=${VITE_FACTORY_ADDRESS}
        - VITE_BASIC_QUEST_FACTORY_ADDRESS=${VITE_BASIC_QUEST_FACTORY_ADDRESS}
  nginx:
    container_name: ${APP_NAME}-nginx
    image: ${APP_NAME}-nginx
    build:
      context: ./nginx
    ports:
      - ${EXTERNAL_PORT}:80
    depends_on:
      - api
      - webapp
